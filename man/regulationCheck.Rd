% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preProcessing.R
\name{regulationCheck}
\alias{regulationCheck}
\title{The regulation check based on the input parameter for the Network Analysis}
\usage{
regulationCheck(
  netPhorceData = netPhorceData,
  upReg = 0.1,
  downReg = 0.1,
  absMinThreshold = 0.1,
  qValueCutOff = 0.05,
  verbose = FALSE
)
}
\arguments{
\item{netPhorceData}{(Required). Processed NetPhorceData}

\item{upReg}{(Required). The percentage fold change required between timepoints to be treated as an increase in phosphorylation.}

\item{downReg}{(Required). The percentage fold change required between timepoints to be treated as a decrease in phosphorylation.}

\item{absMinThreshold}{(Required). The bottom percentage of all fold changes that will be considered as unchanged. Setting this threshold will exclude small intensity fold changes that are considered above the upregulation and downregulation thresholds as a result of small median-centered intensity values.}

\item{qValueCutOff}{(Required). The q-value threshold. A lower threshold increases stringency for including significant phosphopeptides in the network inference algorithm.}

\item{verbose}{(Optional). If TRUE, a summary table will be printed.}
}
\value{
The netPhorce object with the following slots:
\describe{
\item{Design}{Contains data design information and filtering parameters}
\item{data.filtered}{Contains all the data points in a \code{Long} format that passed filtering criteria.}
\item{data.filtered.aov.summary}{Contains all the data points in a \code{Long} format with anova results.}
\item{Misc}{Contains accessory  data including default plotting colors and FASTA Keys, if present.}
\item{regulationData}{Contains regulation data calculated through \code{\link{regulationCheck}} function}
}
}
\description{
Preprocessing the NetPhorce data before \code{\link{networkAnalysis}} by setting the thresholds for the minimal up- and down- fold changes, minimal absolute fold change, and q-value.
}
\examples{
\dontrun{
## Loading One Condition Data
data("oneConditionExample")
## Identify the Key Columns
identifiedCols <- confirmColumnNames(rawMaxQuant = oneConditionExample,
                                    positionCol = "Position",
                                    reverseCol = "Reverse",
                                    localizationProbCol = "Localization prob",
                                    potentialContaminationCol = "Potential contaminant",
                                    aminoAcidCol = "Amino acid",
                                    uniqueIDCol = "Protein",
                                    seqWindowIDCol = "Sequence window",
                                    fastaIDCol = "Fasta headers")
## Identify the Intensity Columns with Condition, Time Point and Replication Information
intensityCols <- confirmIntensityColumns(rawMaxQuant = oneConditionExample,
                                         intensityPattern = "con_time_rep",
                                         verbose = TRUE)
## Process the data based on the identified columns
netPhorceData <- processData(rawMaxQuant = oneConditionExample,
                             processedColNames = identifiedCols,
                             processedIntensity = intensityCols,
                             minReplication = 3,
                             minLocalProb = 0.75)
## Validating the Kinase/Phosphatase Information
netPhorceData <- validateKinaseTable(netPhorceData = netPhorceData,
                                     defaultKinaseTable = TRUE,
                                     abbrev = "Ath")
## Regulation Validation based on user inputs
netPhorceData <- regulationCheck(netPhorceData = netPhorceData,
                                 upReg = 0.25,
                                 downReg = 0.25,
                                 absMinThreshold = 0.1,
                                 qValueCutOff = 0.05,
                                 verbose = TRUE)
}
}
