% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plotRegulation}
\alias{plotRegulation}
\title{The regulation plot allows for the users to visually evaluate the chosen thresholds.}
\usage{
plotRegulation(netPhorceData = netPhorceData, condition = NULL, plotly = TRUE)
}
\arguments{
\item{netPhorceData}{Processed NetPhorce Object with \code{\link{regulationCheck}} completed.}

\item{condition}{(Required). Select a specific condition if multiple conditions are present.}

\item{plotly}{(Required). If TRUE, output an interactive \code{\link{plotly}} version, else output a static \code{\link{ggplot2}} version.}
}
\value{
A ggplot/plotly object
}
\description{
Return a dot plot where each dot represents the intensity log2 fold change of a time point relative to the immediately preceding time point. This value is plotted onto the median log2 intensity of that time point.
}
\examples{
\dontrun{
## Loading Two Conditions Example
data("twoConditionsExample")
## Identify the Key Columns
identifiedCols <- confirmColumnNames(rawMaxQuant = twoConditionsExample,
                                    positionCol = "Position",
                                    reverseCol = "Reverse",
                                    localizationProbCol = "Localization prob",
                                    potentialContaminationCol = "Potential contaminant",
                                    aminoAcidCol = "Amino acid",
                                    uniqueIDCol = "Protein",
                                    seqWindowIDCol = "Sequence window",
                                    fastaIDCol = "Fasta headers")

## Identify the Intensity Columns with Condition, Time Point and Replication Information
intensityCols <- confirmIntensityColumns(rawMaxQuant = twoConditionsExample,
                                         intensityPattern = "con_time_rep",
                                         verbose = TRUE)
## Process the data based on the identified columns
netPhorceData <- processData(rawMaxQuant = twoConditionsExample,
                             processedColNames = identifiedCols,
                             processedIntensity = intensityCols,
                             minReplication = 3,
                             minLocalProb = 0.75)
## Confirm the correct Kinase/Phosphotase information for the data
netPhorceData <- validateKinaseTable(netPhorceData = netPhorceData,
                                     defaultKinaseTable = TRUE,
                                     abbrev = "Ath")
## Evaluate the netPhorce object with regulation thresholds
netPhorceData <- regulationCheck(netPhorceData = netPhorceData,
                                 upReg = 0.25,
                                 downReg = 0.25,
                                 absMinThreshold = 0.1,
                                 qValueCutOff = 0.05,
                                 verbose = TRUE)
## Plot the regulations - GGPLOT (Static) Version
plotRegulation(netPhorceData = netPhorceData ,
               condition = "Col0",
               plotly = FALSE)
## Plot the regulations - PLOTLY (Interactive) Version
plotRegulation(netPhorceData = netPhorceData ,
               condition = "tot3",
               plotly = TRUE)
}
}
