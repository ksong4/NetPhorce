% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plotMultiPeptides}
\alias{plotMultiPeptides}
\title{Intensity pattern of a single or multiple phosphopeptide across the time course and for each condition.}
\usage{
plotMultiPeptides(
  netPhorceData = netPhorceData,
  foundPepetidesIDs = NULL,
  condition = NULL,
  plotly = TRUE
)
}
\arguments{
\item{netPhorceData}{(Required). Processed NetPhorce Object}

\item{foundPepetidesIDs}{(Required). Single or multiple peptide IDs. Use \code{foundPepetidesIDs} with \code{peptideIDList = NULL} to extract a full table of available peptide IDs.}

\item{condition}{(Required). Select a specific condition from your experiment.}

\item{plotly}{(Required). If TRUE, output an interactive \code{\link{plotly}} version, else output a static \code{\link{ggplot2}} version.}
}
\value{
list of dataframes
}
\description{
Return the intensity pattern across multiple time points for the provided phosphopeptide IDs.
}
\examples{
\dontrun{
## Loading Two Conditions Example
data("twoConditionsExample")
## Identify the Key Columns
identifiedCols <- confirmColumnNames(rawMaxQuant = twoConditionsExample,
                                    positionCol = "Position",
                                    reverseCol = "Reverse",
                                    localizationProbCol = "Localization prob",
                                    potentialContaminationCol = "Potential contaminant",
                                    aminoAcidCol = "Amino acid",
                                    uniqueIDCol = "Protein",
                                    seqWindowIDCol = "Sequence window",
                                    fastaIDCol = "Fasta headers")
## Identify the Intensity Columns with Condition, Time Point and Replication Information
intensityCols <- confirmIntensityColumns(rawMaxQuant = twoConditionsExample,
                                         intensityPattern = "con_time_rep",
                                         verbose = TRUE)
## Process the data based on the identified columns
netPhorceData <- processData(rawMaxQuant = twoConditionsExample,
                             processedColNames = identifiedCols,
                             processedIntensity = intensityCols,
                             minReplication = 3,
                             minLocalProb = 0.75)
## Provided IDs all matched the IDs in the netPhorce Data
peptideIDs <-
  findPeptideIDs(netPhorceData = netPhorceData,
                 peptideIDList = c("AT1G01320.2_S1349_1",
                                   "AT1G05560.1_S153_1",
                                   "AT1G01320.2_S149_1"))
## Plot Mutliple Phosphopeptide IDs - PLOTLY (Interactive) Version
plotMultiPeptides(netPhorceData = netPhorceData,
                  foundPepetidesIDs = peptideIDs,
                  condition = "Col0",
                  plotly = TRUE)
## Plot Mutliple Phosphopeptide IDs - GGPLOT (Static) Version
plotMultiPeptides(netPhorceData = netPhorceData,
                  foundPepetidesIDs = peptideIDs,
                  condition = "tot3",
                  plotly = FALSE)
}
}
