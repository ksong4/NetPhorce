% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plotSinglePeptide}
\alias{plotSinglePeptide}
\title{Dotplot displaying the log2 intensity of a single phosphopeptide across the different time points and for each condition.}
\usage{
plotSinglePeptide(
  netPhorceData = netPhorceData,
  foundPepetidesIDs = NULL,
  plotAll = FALSE,
  plotly = FALSE
)
}
\arguments{
\item{netPhorceData}{(Required). Processed NetPhorce Object}

\item{foundPepetidesIDs}{(Required). Single or Multiple Peptides ID, you can use \code{foundPepetidesIDs} with ` peptideIDList = NULL to extract a full table of avaliable peptides.}

\item{plotAll}{(Optional). If TRUE, all matched peptides provided will be plotted in their individual plots.}

\item{plotly}{(Required). If TRUE, output an interactive \code{\link{plotly}} version, else output a static \code{\link{ggplot2}} version.}
}
\value{
one or multiple ggplot/plotly object(s)
}
\description{
Return if the input unque ID is in the dataset and filter out current results related to this
}
\examples{
\dontrun{
## Loading Two Conditions Example
data("twoConditionsExample")
## Identify the Key Columns
identifiedCols <- confirmColumnNames(rawMaxQuant = twoConditionsExample,
                                    positionCol = "Position",
                                    reverseCol = "Reverse",
                                    localizationProbCol = "Localization prob",
                                    potentialContaminationCol = "Potential contaminant",
                                    aminoAcidCol = "Amino acid",
                                    uniqueIDCol = "Protein",
                                    seqWindowIDCol = "Sequence window",
                                    fastaIDCol = "Fasta headers")
## Identify the Intensity Columns with Condition, Time Point and Replication Information
intensityCols <- confirmIntensityColumns(rawMaxQuant = twoConditionsExample,
                                         intensityPattern = "con_time_rep",
                                         verbose = TRUE)
## Process the data based on the identified columns
netPhorceData <- processData(rawMaxQuant = twoConditionsExample,
                             processedColNames = identifiedCols,
                             processedIntensity = intensityCols,
                             minReplication = 3,
                             minLocalProb = 0.75)
## Provided IDs all matched the IDs in the netPhorce Data
peptideIDs <-
  findPeptideIDs(netPhorceData = netPhorceData,
                 peptideIDList = c("AT1G01320.2_S1349_1",
                                   "AT1G05560.1_S153_1",
                                   "AT1G01320.2_S149_1"))
## Plot the first Phosphopeptide ID - GGPLOT (Static) Version
plotSinglePeptide(netPhorceData = netPhorceData,
                   foundPepetidesIDs = peptideIDs,
                   plotAll = FALSE,
                   plotly = TRUE)
## Plot All Provided Phosphopeptide IDs - PLOTLY (Interactive) Version
plotSinglePeptide(netPhorceData = netPhorceData,
                   foundPepetidesIDs = peptideIDs,
                   plotAll = TRUE,
                   plotly = FALSE)
}
}
