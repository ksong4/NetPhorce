% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network.R
\name{networkAnalysis}
\alias{networkAnalysis}
\title{Network Analysis}
\usage{
networkAnalysis(netPhorceData = netPhorceData, requestPlotData = TRUE)
}
\arguments{
\item{netPhorceData}{(Required). Processed netPhorceData data}

\item{requestPlotData}{(Required). If TRUE, data required to visualize the network in R via \code{\link{visNetwork}} package will be saved.}
}
\value{
The netPhorce object with the following slots:
\describe{
\item{Design}{Contains data design information and filtering parameters}
\item{data.filtered}{Contains all the data points in a \code{Long} format that passed filtering criteria.}
\item{data.filtered.aov.summary}{Contains all the data points in a \code{Long} format with anova results.}
\item{Misc}{Contains accessory  data including default plotting colors and FASTA Keys, if present.}
\item{regulationData}{Contains regulation data calculated through \code{\link{regulationCheck}} function}
\item{networkPhorceResutls}{Contains the network results}
\item{networkPlotData}{Contains data required to generate the network via \code{\link{visNetwork}} package}
}
}
\description{
The phosphorylation signaling network shows the inferred causal relations between the kinases/phosphatases and downstream peptides. Network inference is based on dynamic Bayesian principles. For more than one condition, the common phosphopeptides between the conditions are used as input and a network is generated for each condition separately. As such, the network results might differ slightly when running each condition separately through NetPhorce compared to running the conditions together.
}
\examples{
\dontrun{
## Loading One Condition Data
data("oneConditionExample")
## Identify the Key Columns
identifiedCols <- confirmColumnNames(rawMaxQuant = oneConditionExample,
                                    positionCol = "Position",
                                    reverseCol = "Reverse",
                                    localizationProbCol = "Localization prob",
                                    potentialContaminationCol = "Potential contaminant",
                                    aminoAcidCol = "Amino acid",
                                    uniqueIDCol = "Protein",
                                    seqWindowIDCol = "Sequence window",
                                    fastaIDCol = "Fasta headers")
## Identify the Intensity Columns with Condition, Time Point and Replication Information
intensityCols <- confirmIntensityColumns(rawMaxQuant = oneConditionExample,
                                         intensityPattern = "con_time_rep",
                                         verbose = TRUE)
## Process the data based on the identified columns
netPhorceData <- processData(rawMaxQuant = oneConditionExample,
                             processedColNames = identifiedCols,
                             processedIntensity = intensityCols,
                             minReplication = 3,
                             minLocalProb = 0.75)
## Validating the Kinase/Phosphatase Information
netPhorceData <- validateKinaseTable(netPhorceData = netPhorceData,
                                     defaultKinaseTable = TRUE,
                                     abbrev = "Ath")
## Regulation Validation based on user inputs
netPhorceData <- regulationCheck(netPhorceData = netPhorceData,
                                 upReg = 0.25,
                                 downReg = 0.25,
                                 absMinThreshold = 0.1,
                                 qValueCutOff = 0.05,
                                 verbose = TRUE)
## Network Analysis
networkData <- networkAnalysis(netPhorceData = netPhorceData,
                               requestPlotData = TRUE)
}
}
