% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preProcessing.R
\name{validateKinaseTable}
\alias{validateKinaseTable}
\title{Validate existing or user-uploaded Kinase/Phosphatase data}
\usage{
validateKinaseTable(
  netPhorceData = netPhorceData,
  defaultKinaseTable = TRUE,
  userKinaseTable = NULL,
  abbrev = NULL,
  species = NULL,
  verbose = TRUE
)
}
\arguments{
\item{netPhorceData}{(Required). netPhorceData calculated from \code{\link{processData}} function.}

\item{defaultKinaseTable}{(Required). If TRUE, this function will search the preloaded kinase/phosphatase table, which contains the kinase and/or phosphatase IDs of 25 species. Please use \code{\link{checkPreloadKinaseTable}} function to check details of these 25 species.}

\item{userKinaseTable}{(Optional). A user-provided kinase/phosphatase table, which is required to include an "ID" and "Family" column (CASE-SENSITIVE column names). The ID column includes the peptide's universal ID that matches the protein ID column from the raw MaxQuant data. The Family column will include information regarding whether the peptide is a "Kinase" or "Phosphatase" (CASE-SENSITIVE).}

\item{abbrev}{(Optional). A three character string of the species abbreviation from the preloaded kinases/phosphatase table. This parameter will be evaluated if the species parameter is NULL.}

\item{species}{(Required). A string of the species name as listed in the preloaded kinases/phosphatase table. If the species and abbrev parameter are NULL, the function will assume the user is using customized kinase phosphatase data.}

\item{verbose}{(Optional). If TRUE, print a summary table of matched/unmatched kinases and phosphatases.}
}
\value{
A list of data.frames
}
\description{
This function is designed to identify kinases and phosphatases by matching the peptide IDs. Identified kinases or phosphatases are required to accurately infer a signaling network.
}
\examples{
\dontrun{
## Loading One Condition Data
data("oneConditionExample")
## Identify the Key Columns
identifiedCols <- confirmColumnNames(rawMaxQuant = oneConditionExample,
                                	positionCol = "Position",
                                	reverseCol = "Reverse",
                                	localizationProbCol = "Localization prob",
                                	potentialContaminationCol = "Potential contaminant",
                                	aminoAcidCol = "Amino acid",
               	                 uniqueIDCol = "Protein",
                                	seqWindowIDCol = "Sequence window",
                                	fastaIDCol = "Fasta headers") ## Identify the Intensity Columns with Condition, Time Point and Replication Information
intensityCols <- confirmIntensityColumns(rawMaxQuant = oneConditionExample,
                                     	intensityPattern = "con_time_rep",
                                     	verbose = TRUE)
## Process the data based on the identified columns
netPhorceData <- processData(rawMaxQuant = oneConditionExample,
                         	processedColNames = identifiedCols,
              	           processedIntensity = intensityCols,
                         	minReplication = 3,
                         	minLocalProb = 0.75)
## Validating the Kinase/Phosphatase Information
netPhorceData <- validateKinaseTable(netPhorceData = netPhorceData,
                                     defaultKinaseTable = TRUE,
                                 	  abbrev = "Ath")
}
}
