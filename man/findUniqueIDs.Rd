% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{findUniqueIDs}
\alias{findUniqueIDs}
\title{Confirm or List Unique IDs from the netPhorceData}
\usage{
findUniqueIDs(
  netPhorceData = netPhorceData,
  uniqueIDList = NULL,
  verbose = FALSE
)
}
\arguments{
\item{netPhorceData}{(Required). Processed netPhorce Object}

\item{uniqueIDList}{(Required). Vector of unique IDs. If NULL, this function will return all avaliable uniqueIDs.}

\item{verbose}{(Required). If TRUE, the function will return the available Unique IDs if the user left uniqueIDList as NULL or none of the IDs on the uniqueIDList matched the IDs in the netPhorce data.}
}
\value{
list of vectors for matched and unmatched IDs
}
\description{
This function intended to use to confirm the userâ€™s input Unique IDs for plotting or list the avaliable Unique IDs.
}
\examples{
\dontrun{
## Loading Two Conditions Example
data("twoConditionsExample")
## Identify the Key Columns
identifiedCols <- confirmColumnNames(rawMaxQuant = twoConditionsExample,
                                    positionCol = "Position",
                                    reverseCol = "Reverse",
                                    localizationProbCol = "Localization prob",
                                    potentialContaminationCol = "Potential contaminant",
                                    aminoAcidCol = "Amino acid",
                                    uniqueIDCol = "Protein",
                                    seqWindowIDCol = "Sequence window",
                                    fastaIDCol = "Fasta headers")
## Identify the Intensity Columns with Condition, Time Point and Replication Information
intensityCols <- confirmIntensityColumns(rawMaxQuant = twoConditionsExample,
                                         intensityPattern = "con_time_rep",
                                         verbose = TRUE)
## Process the data based on the identified columns
netPhorceData <- processData(rawMaxQuant = twoConditionsExample,
                             processedColNames = identifiedCols,
                             processedIntensity = intensityCols,
                             minReplication = 3,
                             minLocalProb = 0.75)
## Search for matching IDs
findUniqueIDs(netPhorceData = netPhorceData,
              uniqueIDList = c(
                # Significant Set Examples:
                "AT1G13030.1", "AT1G13360.3", "AT1G42550.1",
                # Unique/Abscence Set Examples
                "AT1G17280.9", "AT1G22310.2", "AT1G23890.2"
              ),
              verbose = TRUE)
## Return all available IDs
findUniqueIDs(netPhorceData = netPhorceData,
              uniqueIDList = NULL)
}
}
