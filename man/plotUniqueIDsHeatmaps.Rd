% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plotUniqueIDsHeatmaps}
\alias{plotUniqueIDsHeatmaps}
\title{Plot Heatmap Based on the Unique IDs Verified from the \code{\link{findUniqueIDs}} function}
\usage{
plotUniqueIDsHeatmaps(
  netPhorceData = netPhorceData,
  foundUniqueIDs = NULL,
  heatmapType = "Significant",
  minQVal = 0.05,
  plotly = TRUE
)
}
\arguments{
\item{netPhorceData}{(Required). Processed netPhorce Object}

\item{foundUniqueIDs}{(Required). Output from the \code{\link{findUniqueIDs}} function. If nothing in the “MatchedIDs” vector, no plot will be generated}

\item{heatmapType}{(Required). Either “Significant” or “AbsencePresence” are required. “Significant” for the unique peptide IDs that were significant differentially phosphorylated peptides. “AbsencePresence” for the unique peptide IDs that were absent at at least one time point.}

\item{minQVal}{(Required). A q-value threshold. A lower threshold increases stringency for displaying significant phosphopeptides into the heatmap. The q-value controls the positive false discovery rate and is estimated based on the p-values obtained from a linear mixed model fitted to the intensities of each peptide.}

\item{plotly}{(Required). If TRUE, output an interactive \code{\link{plotly}} version, else output a static \code{\link{ggplot2}} version.}
}
\value{
a ggplot/plotly object
}
\description{
generate Heatmap Based on the Unique IDs matched to the netPhorce Data from findUniqueIDs() function
}
\examples{
\dontrun{
## Loading Two Conditions Example
data("twoConditionsExample")
## Identify the Key Columns
identifiedCols <- confirmColumnNames(rawMaxQuant = twoConditionsExample,
                                    positionCol = "Position",
                                    reverseCol = "Reverse",
                                    localizationProbCol = "Localization prob",
                                    potentialContaminationCol = "Potential contaminant",
                                    aminoAcidCol = "Amino acid",
                                    uniqueIDCol = "Protein",
                                    seqWindowIDCol = "Sequence window",
                                    fastaIDCol = "Fasta headers")
## Identify the Intensity Columns with Condition, Time Point and Replication Information
intensityCols <- confirmIntensityColumns(rawMaxQuant = twoConditionsExample,
                                         intensityPattern = "con_time_rep",
                                         verbose = TRUE)
## Process the data based on the identified columns
netPhorceData <- processData(rawMaxQuant = twoConditionsExample,
                             processedColNames = identifiedCols,
                             processedIntensity = intensityCols,
                             minReplication = 3,
                             minLocalProb = 0.75)
## Provided IDs all matched the IDs in the netPhorce Data
uniqueIDs <-
  findUniqueIDs(netPhorceData = netPhorceData,
                uniqueIDList = c(
                  # Significant Set Examples:
                  "AT1G13030.1", "AT1G13360.3", "AT1G42550.1",
                  # Unique/Abscence Set Examples
                  "AT1G17280.9", "AT1G22310.2", "AT1G23890.2"
                ),
                verbose = TRUE)
## Plotting Significant Heatmap - PLOTLY Version
plotUniqueIDsHeatmaps(netPhorceData = netPhorceData,
                      foundUniqueIDs = uniqueIDs,
                      heatmapType = "Significant",
                      minQVal = 0.1,
                      plotly = TRUE)
## Plotting Absence/Prescence Heatmap - GGPLOT version
plotUniqueIDsHeatmaps(netPhorceData = netPhorceData,
                      foundUniqueIDs = uniqueIDs,
                      heatmapType = "AbsencePresence",
                      plotly = FALSE)
}
}
