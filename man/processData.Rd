% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processData.R
\name{processData}
\alias{processData}
\title{Initial processing and quality control of MaxQuant data including the removal of contaminated and reverse peptides, unnecessary columns, and invalid peptides based on filtering criteria.}
\usage{
processData(
  rawMaxQuant = rawMaxQuant,
  processedColNames = processedColNames,
  processedIntensity = intensity,
  minReplication = minReplication,
  minLocalProb = minLocalProb
)
}
\arguments{
\item{rawMaxQuant}{(Required). Loaded MaxQuant data}

\item{processedColNames}{(Required). Processed required columns from \code{\link{confirmColumnNames}} function.}

\item{processedIntensity}{(Required). Processed required intensity columns from the \code{\link{confirmIntensityColumns}} function.}

\item{minReplication}{(Required). The minimal number of valid replicate data points or replicate zeros per sample a peptide should contain across the entire time course and experiment. Peptides that do not meet these criteria are filtered out.}

\item{minLocalProb}{(Required). The minimal localization probability required for a peptide to be included in downstream analyses.}
}
\value{
The netPhorce object with the following slots:
\describe{
\item{Design}{Contains data design information and filtering parameters}
\item{data.filtered}{Contains all the data points in a \code{Long} format that passed filtering criteria.}
\item{data.filtered.aov.summary}{Contains the anova results in a \code{Long} format .}
\item{Misc}{Contains accessory data including default plotting colors and FASTA Keys, if present.}
}
}
\description{
The function combines the raw MaxQuant data, and the outputs from \code{\link{confirmIntensityColumns}} and \code{\link{confirmColumnNames}} to form a \code{\link{netPhorce-class}} object.
}
\examples{
\dontrun{
## Loading One Condition Data
data("oneConditionExample")
## Identify the Key Columns
identifiedCols <- confirmColumnNames(rawMaxQuant = oneConditionExample,
                                	    positionCol = "Position",
                                	    reverseCol = "Reverse",
                                	    localizationProbCol = "Localization prob",
                                    	potentialContaminationCol = "Potential contaminant",
                                	    aminoAcidCol = "Amino acid",
                   	                uniqueIDCol = "Protein",
                                	    seqWindowIDCol = "Sequence window",
                                	    fastaIDCol = "Fasta headers")
## Identify the Intensity Columns with Condition, Time Point and Replication Information
intensityCols <- confirmIntensityColumns(rawMaxQuant = oneConditionExample,
                                       	intensityPattern = "con_time_rep",
                                       	verbose = TRUE)
## Process the data based on the identified columns
netPhorceData <- processData(rawMaxQuant = oneConditionExample,
                         	  processedColNames = identifiedCols,
                         	  processedIntensity = intensityCols,
                         	  minReplication = 3,
                         	  minLocalProb = 0.75)
}
}
